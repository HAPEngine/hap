CMAKE_MINIMUM_REQUIRED(VERSION 3.8)
PROJECT(hap)


INCLUDE(CheckCXXCompilerFlag)


# Utility function for adding supported compiler flags
FUNCTION(ENABLE_CXX_COMPILER_FLAG_IF_SUPPORTED FLAG)
    STRING(FIND "${CMAKE_CXX_FLAGS}" "${FLAG}" FLAG_ALREADY_SET)

    IF(FLAG_ALREADY_SET EQUAL -1)
        CHECK_CXX_COMPILER_FLAG("${FLAG}" FLAG_SUPPORTED)

        IF (FLAG_SUPPORTED)
            SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${FLAG}" PARENT_SCOPE)
        ENDIF()
    ENDIF()
ENDFUNCTION()


# Modify compiler options to be super strict
ENABLE_CXX_COMPILER_FLAG_IF_SUPPORTED("-Wall")
ENABLE_CXX_COMPILER_FLAG_IF_SUPPORTED("-Wextra")
ENABLE_CXX_COMPILER_FLAG_IF_SUPPORTED("-pedantic")
ENABLE_CXX_COMPILER_FLAG_IF_SUPPORTED("-Wl,--no-as-needed")


# Setup build output directories
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)


# HAP core library
FILE(GLOB HAP_CORE_SOURCES src/*.c)
ADD_LIBRARY(libhap SHARED ${HAP_CORE_SOURCES})
TARGET_INCLUDE_DIRECTORIES(libhap PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)


# HAP modules 
FILE(GLOB LIB_FILES src/lib/*.c)
FOREACH(LIB_FILE ${LIB_FILES})
  GET_FILENAME_COMPONENT(TARGET_NAME ${LIB_FILE} NAME_WE)
  ADD_LIBRARY(${TARGET_NAME} SHARED ${LIB_FILE})
  TARGET_LINK_LIBRARIES(${TARGET_NAME} libhap)
  TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
ENDFOREACH(LIB_FILE)


# HAP executable
FILE(GLOB CMD_FILES src/cmds/*.c)
FOREACH(CMD_FILE ${CMD_FILES})
  GET_FILENAME_COMPONENT(TARGET_NAME ${CMD_FILE} NAME_WE)
  ADD_EXECUTABLE(${TARGET_NAME} ${CMD_FILE})
  TARGET_LINK_LIBRARIES(${TARGET_NAME} m z dl libhap)
  TARGET_INCLUDE_DIRECTORIES(${TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
ENDFOREACH(CMD_FILE)
